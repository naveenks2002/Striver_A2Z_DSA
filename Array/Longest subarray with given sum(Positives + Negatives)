
int longestSubarrayWithSumK(vector<int> nums, long long k) {
    // Write your code here
    long long sum = 0;
     int maxlen = 0;
    map<long long, int> preSum_map;

    for(int i=0; i<nums.size(); i++){
        sum += nums[i];
        if(sum==k){
            maxlen = max(maxlen,i+1);
        }

        long long rem = sum - k;

        if(preSum_map.find(rem)!=preSum_map.end()){
            int len = i - preSum_map[rem];
            maxlen = max(len,maxlen);
        }

        if(preSum_map.find(sum)==preSum_map.end())
            preSum_map[sum] = i;
        }

    return maxlen;
}
